{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\chris\\\\Desktop\\\\theRunwayShop\\\\FINAL PROJECT\\\\images-app-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\chris\\\\Desktop\\\\theRunwayShop\\\\FINAL PROJECT\\\\images-app-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { Storage } from \"aws-amplify\";\nexport function s3Upload(_x) {\n  return _s3Upload.apply(this, arguments);\n}\n\nfunction _s3Upload() {\n  _s3Upload = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(file) {\n    var filename, stored;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            filename = \"\".concat(Date.now(), \"-\").concat(file.name);\n            _context.next = 3;\n            return Storage.vault.put(filename, file, {\n              contentType: file.type\n            });\n\n          case 3:\n            stored = _context.sent;\n            return _context.abrupt(\"return\", stored.key);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _s3Upload.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\theRunwayShop\\FINAL PROJECT\\images-app-client\\src\\libs\\awsLib.js"],"names":["Storage","s3Upload","file","filename","Date","now","name","vault","put","contentType","type","stored","key"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,gBAAsBC,QAAtB;AAAA;AAAA;;;;;2BAAO,iBAAwBC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,QADD,aACeC,IAAI,CAACC,GAAL,EADf,cAC6BH,IAAI,CAACI,IADlC;AAAA;AAAA,mBAGgBN,OAAO,CAACO,KAAR,CAAcC,GAAd,CAAkBL,QAAlB,EAA4BD,IAA5B,EAAkC;AACrDO,cAAAA,WAAW,EAAEP,IAAI,CAACQ;AADmC,aAAlC,CAHhB;;AAAA;AAGCC,YAAAA,MAHD;AAAA,6CAOEA,MAAM,CAACC,GAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { Storage } from \"aws-amplify\";\r\n\r\nexport async function s3Upload(file) {\r\n  const filename = `${Date.now()}-${file.name}`;\r\n\r\n  const stored = await Storage.vault.put(filename, file, {\r\n    contentType: file.type\r\n  });\r\n\r\n  return stored.key;\r\n}"]},"metadata":{},"sourceType":"module"}